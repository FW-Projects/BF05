<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\objects\AT32F415RBT7_WorkBench.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\objects\AT32F415RBT7_WorkBench.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Fri Jun 13 16:00:27 2025
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; wk_usart2_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from lto-llvm-5b4722.o(.text.BusFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[20]">CAN1_SE_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3e]">CMP1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3f]">CMP2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[f]">CRM_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[39]">DMA2_Channel1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3a]">DMA2_Channel2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[40]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from lto-llvm-5b4722.o(.text.DebugMon_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[33]">ERTCAlarm_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[d]">ERTC_WKUP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[10]">EXINT0_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[32]">EXINT15_10_IRQHandler</a> from lto-llvm-5b4722.o(.text.EXINT15_10_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[11]">EXINT1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[12]">EXINT2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[13]">EXINT3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[14]">EXINT4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[21]">EXINT9_5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-5b4722.o(.text.HardFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2a]">I2C1_ERR_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[29]">I2C1_EVT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2c]">I2C2_ERR_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2b]">I2C2_EVT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from lto-llvm-5b4722.o(.text.MemManage_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-5b4722.o(.text.NMI_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3d]">OTGFS1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[34]">OTGFS1_WKUP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from lto-llvm-5b4722.o(.text.PendSV_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[45]">RecvDataFromLCD</a> from lto-llvm-5b4722.o(.text.RecvDataFromLCD) referenced 2 times from lto-llvm-5b4722.o(.text.DwinInitialization)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[35]">SDIO1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from lto-llvm-5b4722.o(.text.SVC_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from lto-llvm-5b4722.o(.text.SysTick_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[42]">SystemInit</a> from lto-llvm-5b4722.o(.text.SystemInit) referenced from startup_at32f415.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[25]">TMR1_CH_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[23]">TMR1_OVF_TMR10_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[26]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[27]">TMR3_GLOBAL_IRQHandler</a> from lto-llvm-5b4722.o(.text.TMR3_GLOBAL_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[28]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[36]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[37]">UART4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[38]">UART5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from lto-llvm-5b4722.o(.text.USART1_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from lto-llvm-5b4722.o(.text.USART3_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from lto-llvm-5b4722.o(.text.UsageFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[44]">WriteDataToLCD</a> from lto-llvm-5b4722.o(.text.WriteDataToLCD) referenced 2 times from lto-llvm-5b4722.o(.text.DwinInitialization)
 <LI><a href="#[43]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f415.o(.text)
 <LI><a href="#[48]">adc_task</a> from lto-llvm-5b4722.o(.text.adc_task) referenced 2 times from lto-llvm-5b4722.o(.text.main)
 <LI><a href="#[5a]">beep_off</a> from lto-llvm-5b4722.o(.text.beep_off) referenced from lto-llvm-5b4722.o(.data)
 <LI><a href="#[59]">beep_on</a> from lto-llvm-5b4722.o(.text.beep_on) referenced from lto-llvm-5b4722.o(.data)
 <LI><a href="#[49]">beep_task</a> from lto-llvm-5b4722.o(.text.beep_task) referenced 2 times from lto-llvm-5b4722.o(.text.main)
 <LI><a href="#[4d]">dwin_task</a> from lto-llvm-5b4722.o(.text.dwin_task) referenced 2 times from lto-llvm-5b4722.o(.text.main)
 <LI><a href="#[4b]">flash_task</a> from lto-llvm-5b4722.o(.text.flash_task) referenced 2 times from lto-llvm-5b4722.o(.text.main)
 <LI><a href="#[54]">fputc</a> from lto-llvm-5b4722.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[55]">get_key_ch</a> from lto-llvm-5b4722.o(.text.get_key_ch) referenced from lto-llvm-5b4722.o(.data)
 <LI><a href="#[57]">get_key_down</a> from lto-llvm-5b4722.o(.text.get_key_down) referenced from lto-llvm-5b4722.o(.data)
 <LI><a href="#[58]">get_key_touch</a> from lto-llvm-5b4722.o(.text.get_key_touch) referenced from lto-llvm-5b4722.o(.data)
 <LI><a href="#[56]">get_key_up</a> from lto-llvm-5b4722.o(.text.get_key_up) referenced from lto-llvm-5b4722.o(.data)
 <LI><a href="#[46]">iap_task</a> from lto-llvm-5b4722.o(.text.iap_task) referenced 2 times from lto-llvm-5b4722.o(.text.main)
 <LI><a href="#[47]">key_task</a> from lto-llvm-5b4722.o(.text.key_task) referenced 2 times from lto-llvm-5b4722.o(.text.main)
 <LI><a href="#[41]">main</a> from lto-llvm-5b4722.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[4c]">output_task</a> from lto-llvm-5b4722.o(.text.output_task) referenced 2 times from lto-llvm-5b4722.o(.text.main)
 <LI><a href="#[50]">tmt_create</a> from lto-llvm-5b4722.o(.text.tmt_create) referenced 2 times from lto-llvm-5b4722.o(.text.tmt_init)
 <LI><a href="#[51]">tmt_delete</a> from lto-llvm-5b4722.o(.text.tmt_delete) referenced 2 times from lto-llvm-5b4722.o(.text.tmt_init)
 <LI><a href="#[4e]">tmt_run</a> from lto-llvm-5b4722.o(.text.tmt_run) referenced 2 times from lto-llvm-5b4722.o(.text.tmt_init)
 <LI><a href="#[53]">tmt_run_ctrl</a> from lto-llvm-5b4722.o(.text.tmt_run_ctrl) referenced 2 times from lto-llvm-5b4722.o(.text.tmt_init)
 <LI><a href="#[52]">tmt_time_ctrl</a> from lto-llvm-5b4722.o(.text.tmt_time_ctrl) referenced 2 times from lto-llvm-5b4722.o(.text.tmt_init)
 <LI><a href="#[4f]">tmt_update_tick</a> from lto-llvm-5b4722.o(.text.tmt_update_tick) referenced 2 times from lto-llvm-5b4722.o(.text.tmt_init)
 <LI><a href="#[4a]">work_task</a> from lto-llvm-5b4722.o(.text.work_task) referenced 2 times from lto-llvm-5b4722.o(.text.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[43]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(.text)
</UL>
<P><STRONG><a name="[149]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[69]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[14a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[14b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[14c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[14d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[14e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ERTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ERTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>OTGFS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTGFS1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_OVF_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[14f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[150]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_control
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Curve_Heartbeat_Packet
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_control
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[151]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[152]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>

<P><STRONG><a name="[153]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[154]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[62]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>

<P><STRONG><a name="[155]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[157]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[6c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs_limit
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs_limit
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Curve_Heartbeat_Packet
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_control
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Curve_Heartbeat_Packet
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_control
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Curve_Heartbeat_Packet
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_control
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_control
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
</UL>

<P><STRONG><a name="[6f]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6e]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXINT15_10_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.EXINT15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = EXINT15_10_IRQHandler &rArr; Direct_Handle_PWM_Out &rArr; temp_get_filter_move_average &rArr; moveAverageFilter &rArr; get_adcval &rArr; adc_ordinary_channel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_clear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; wk_timebase_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_handler
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_TimeOutCounter
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_down
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;code_mode_time
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhance_mode_countdown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SystemInit</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.TMR3_GLOBAL_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART1_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART3_IRQHandler &rArr; queue_read &rArr; queue_isEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_write
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>fputc</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = fputc &rArr; stdout_putchar &rArr; EventRecordData &rArr; EventRecordItem &rArr; LockRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[41]"></a>main</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = main &rArr; wk_usart2_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_delay_ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UsartInit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_id
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DwinInitialization
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWG2_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmt_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_exint_config
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_spi1_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_dma_channel_config
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_dma1_channel1_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_gpio_config
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_debug_config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_periph_clock_config
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[142]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[159]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[15a]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[15b]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[7e]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProc
</UL>

<P><STRONG><a name="[15c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[15d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[15e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[144]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[143]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[147]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[146]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[db]"></a>nvic_vector_table_set</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.nvic_vector_table_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nvic_vector_table_set
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>wk_system_clock_config</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.wk_system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = wk_system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_auto_step_mode_enable
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_hext_stable_wait
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dd]"></a>wk_periph_clock_config</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.wk_periph_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wk_periph_clock_config &rArr; crm_periph_clock_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>wk_debug_config</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.wk_debug_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = wk_debug_config &rArr; gpio_pin_remap_config
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>wk_nvic_config</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.wk_nvic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wk_nvic_config &rArr; nvic_irq_enable &rArr; NVIC_EncodePriority.99
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e0]"></a>wk_timebase_init</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_timebase_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = wk_timebase_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_clock_source_config
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>wk_gpio_config</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, lto-llvm-5b4722.o(.text.wk_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = wk_gpio_config &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>wk_dma1_channel1_init</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_dma1_channel1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wk_dma1_channel1_init &rArr; dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_default_para_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e3]"></a>wk_dma_channel_config</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.wk_dma_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wk_dma_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>dma_channel_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>wk_usart1_init</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_usart1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = wk_usart1_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_control_set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>wk_usart2_init</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, lto-llvm-5b4722.o(.text.wk_usart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = wk_usart2_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_control_set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>wk_usart3_init</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_usart3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = wk_usart3_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_control_set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e8]"></a>wk_uart4_init</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_uart4_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = wk_uart4_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_control_set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e9]"></a>wk_uart5_init</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_uart5_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = wk_uart5_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_control_set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>wk_spi1_init</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, lto-llvm-5b4722.o(.text.wk_spi1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = wk_spi1_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_default_para_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>wk_adc1_init</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_adc1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wk_adc1_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_software_trigger_enable
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_status_get
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_start
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_init_status_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_part_mode_enable
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_conversion_trigger_set
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_channel_set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_base_config
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_base_default_para_init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_tempersensor_vintrv_enable
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_adc_clock_div_set
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>wk_exint_config</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, lto-llvm-5b4722.o(.text.wk_exint_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wk_exint_config &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_default_para_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_exint_line_config
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ed]"></a>wk_tmr2_init</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_tmr2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wk_tmr2_init &rArr; tmr_output_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_immediately_set
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_buffer_enable
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_config
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_one_cycle_mode_enable
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_primary_mode_select
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_sub_sync_mode_set
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_clock_source_div_set
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ee]"></a>wk_tmr3_init</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_tmr3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = wk_tmr3_init &rArr; gpio_pin_remap_config
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_input_channel_init
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_primary_mode_select
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_sub_sync_mode_set
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_clock_source_div_set
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ef]"></a>wk_tmr9_init</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.wk_tmr9_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wk_tmr9_init &rArr; tmr_output_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_immediately_set
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_buffer_enable
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_config
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_clock_source_div_set
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>tmt_init</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmt_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>iap_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.iap_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = iap_task &rArr; iap_command_handle &rArr; flash_word_program &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_command_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.main)
</UL>
<P><STRONG><a name="[47]"></a>key_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.key_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = key_task &rArr; key_handle &rArr; KeyProc &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.main)
</UL>
<P><STRONG><a name="[48]"></a>adc_task</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = adc_task &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.main)
</UL>
<P><STRONG><a name="[49]"></a>beep_task</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.beep_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = beep_task &rArr; BeepProc
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.main)
</UL>
<P><STRONG><a name="[4a]"></a>work_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.work_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = work_task &rArr; Direct_handle_switch &rArr; check_handle_position &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_handle_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.main)
</UL>
<P><STRONG><a name="[4b]"></a>flash_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.flash_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = flash_task &rArr; FlashProc &rArr; flash_sector_erase &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.main)
</UL>
<P><STRONG><a name="[4c]"></a>output_task</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.output_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = output_task &rArr; fan_control &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hot_control
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_control
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.main)
</UL>
<P><STRONG><a name="[4d]"></a>dwin_task</STRONG> (Thumb, 412 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.dwin_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = dwin_task &rArr; Page_Direct_Work_Heartbeat_Packet &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Code_Heartbeat_Packet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Curve_Heartbeat_Packet
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Work_Heartbeat_Packet
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Switch
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Set_Heartbeat_Packet
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_General_Heartbeat_Packet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.main)
</UL>
<P><STRONG><a name="[96]"></a>EventRecorderInitialize</STRONG> (Thumb, 426 bytes, Stack size 40 bytes, lto-llvm-5b4722.o(.text.EventRecorderInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = EventRecorderInitialize &rArr; EventRecorderStart &rArr; EventRecordItem &rArr; LockRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderStart
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderEnable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderTimerGetFreq
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderTimerSetup
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>FWG2_Init</STRONG> (Thumb, 834 bytes, Stack size 20 bytes, lto-llvm-5b4722.o(.text.FWG2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FWG2_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>DwinInitialization</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.DwinInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DwinInitialization
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>PID_Init</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, lto-llvm-5b4722.o(.text.PID_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PID_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d8]"></a>iap_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.iap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = iap_init &rArr; flash_sector_erase &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f4]"></a>spiflash_init</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, lto-llvm-5b4722.o(.text.spiflash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spiflash_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_default_para_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>spiflash_read_id</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.spiflash_read_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spiflash_read_id &rArr; spi_byte_read &rArr; spi_byte_write &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_read
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>BSP_UsartInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.BSP_UsartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_UsartInit &rArr; queue_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f6]"></a>wk_delay_ms</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.wk_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wk_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_get
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>iap_command_handle</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.iap_command_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = iap_command_handle &rArr; flash_word_program &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_system_reset
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_task
</UL>

<P><STRONG><a name="[d9]"></a>key_handle</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.key_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = key_handle &rArr; KeyProc &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_handle
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_touch
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_ch
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_down
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_up
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProc
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_task
</UL>

<P><STRONG><a name="[7c]"></a>get_adcval</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.get_adcval))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = get_adcval &rArr; adc_ordinary_channel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_software_trigger_enable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_channel_set
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_flag_get
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_conversion_data_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveAverageFilter
</UL>

<P><STRONG><a name="[c4]"></a>BeepProc</STRONG> (Thumb, 338 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.BeepProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BeepProc
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_task
</UL>

<P><STRONG><a name="[85]"></a>Direct_handle_switch</STRONG> (Thumb, 948 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.Direct_handle_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Direct_handle_switch &rArr; check_handle_position &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_handle_position
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_task
</UL>

<P><STRONG><a name="[9e]"></a>FlashProc</STRONG> (Thumb, 21664 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.FlashProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FlashProc &rArr; flash_sector_erase &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wred_halfword
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_check_len
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[cc]"></a>fan_control</STRONG> (Thumb, 2692 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.fan_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = fan_control &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_task
</UL>

<P><STRONG><a name="[d5]"></a>hot_control</STRONG> (Thumb, 732 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.hot_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hot_control &rArr; tmr_channel_value_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_task
</UL>

<P><STRONG><a name="[ca]"></a>Page_General_Heartbeat_Packet</STRONG> (Thumb, 6030 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.Page_General_Heartbeat_Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Page_General_Heartbeat_Packet
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwin_task
</UL>

<P><STRONG><a name="[cb]"></a>Page_Set_Heartbeat_Packet</STRONG> (Thumb, 724 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.Page_Set_Heartbeat_Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Page_Set_Heartbeat_Packet
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwin_task
</UL>

<P><STRONG><a name="[b4]"></a>Page_Switch</STRONG> (Thumb, 408 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.Page_Switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Page_Switch &rArr; usart_sendData &rArr; queue_read &rArr; queue_isEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwin_task
</UL>

<P><STRONG><a name="[b1]"></a>Page_Direct_Work_Heartbeat_Packet</STRONG> (Thumb, 4680 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.Page_Direct_Work_Heartbeat_Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Page_Direct_Work_Heartbeat_Packet &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwin_task
</UL>

<P><STRONG><a name="[b0]"></a>Page_Direct_Curve_Heartbeat_Packet</STRONG> (Thumb, 3512 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.Page_Direct_Curve_Heartbeat_Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Page_Direct_Curve_Heartbeat_Packet &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwin_task
</UL>

<P><STRONG><a name="[ae]"></a>Page_Code_Heartbeat_Packet</STRONG> (Thumb, 2362 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.Page_Code_Heartbeat_Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Page_Code_Heartbeat_Packet &rArr; usart_sendData &rArr; queue_read &rArr; queue_isEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwin_task
</UL>

<P><STRONG><a name="[127]"></a>crm_reset</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[128]"></a>crm_clock_source_enable</STRONG> (Thumb, 162 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.crm_clock_source_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_clock_source_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[c9]"></a>crm_flag_get</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.crm_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_hext_stable_wait
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[c8]"></a>crm_hext_stable_wait</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.crm_hext_stable_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = crm_hext_stable_wait &rArr; crm_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[129]"></a>crm_pll_config2</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.crm_pll_config2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_pll_config2
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[12a]"></a>crm_ahb_div_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.crm_ahb_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_ahb_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[12b]"></a>crm_apb2_div_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.crm_apb2_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_apb2_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[12c]"></a>crm_apb1_div_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.crm_apb1_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_apb1_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[12d]"></a>crm_auto_step_mode_enable</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.crm_auto_step_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_auto_step_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[12e]"></a>crm_sysclk_switch</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.crm_sysclk_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_sysclk_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[c7]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[10e]"></a>system_core_clock_update</STRONG> (Thumb, 552 bytes, Stack size 48 bytes, lto-llvm-5b4722.o(.text.system_core_clock_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[109]"></a>crm_periph_clock_enable</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.crm_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_periph_clock_config
</UL>

<P><STRONG><a name="[fd]"></a>nvic_priority_group_config</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.nvic_priority_group_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nvic_priority_group_config &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[124]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[125]"></a>NVIC_EncodePriority</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[126]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[f8]"></a>nvic_irq_enable</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nvic_irq_enable &rArr; NVIC_EncodePriority.99
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority.100
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority.99
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping.98
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[b6]"></a>enhance_mode_countdown</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.enhance_mode_countdown))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b7]"></a>code_mode_time</STRONG> (Thumb, 2612 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.code_mode_time))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b8]"></a>count_down</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.count_down))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b9]"></a>USART3_TimeOutCounter</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.USART3_TimeOutCounter))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[ba]"></a>wk_timebase_handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.wk_timebase_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wk_timebase_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_increase
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[bb]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 296 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[bc]"></a>usart_data_receive</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.usart_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>exint_flag_get</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.exint_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = exint_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>exint_flag_clear</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.exint_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = exint_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[7b]"></a>Direct_Handle_PWM_Out</STRONG> (Thumb, 2718 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.Direct_Handle_PWM_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Direct_Handle_PWM_Out &rArr; temp_get_filter_move_average &rArr; moveAverageFilter &rArr; get_adcval &rArr; adc_ordinary_channel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_get_filter_move_average
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Clear
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>PID_Clear</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.PID_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PID_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
</UL>

<P><STRONG><a name="[7f]"></a>PID_Position_Calc</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.PID_Position_Calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PID_Position_Calc &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
</UL>

<P><STRONG><a name="[82]"></a>tmr_channel_value_set</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.tmr_channel_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tmr_channel_value_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hot_control
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_control
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[83]"></a>tmr_counter_enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_counter_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_counter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hot_control
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[84]"></a>temp_get_filter_move_average</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.temp_get_filter_move_average))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = temp_get_filter_move_average &rArr; moveAverageFilter &rArr; get_adcval &rArr; adc_ordinary_channel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveAverageFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_Handle_PWM_Out
</UL>

<P><STRONG><a name="[12f]"></a>wk_timebase_increase</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.wk_timebase_increase))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_handler
</UL>

<P><STRONG><a name="[11d]"></a>wk_timebase_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.wk_timebase_get))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_delay_ms
</UL>

<P><STRONG><a name="[c6]"></a>crm_clocks_freq_get</STRONG> (Thumb, 610 bytes, Stack size 56 bytes, lto-llvm-5b4722.o(.text.crm_clocks_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_init
</UL>

<P><STRONG><a name="[130]"></a>systick_clock_source_config</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.systick_clock_source_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = systick_clock_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_init
</UL>

<P><STRONG><a name="[11c]"></a>gpio_pin_remap_config</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, lto-llvm-5b4722.o(.text.gpio_pin_remap_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_pin_remap_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_debug_config
</UL>

<P><STRONG><a name="[110]"></a>gpio_default_para_init</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.gpio_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_exint_config
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_spi1_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_gpio_config
</UL>

<P><STRONG><a name="[10a]"></a>gpio_init</STRONG> (Thumb, 324 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_exint_config
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_spi1_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_gpio_config
</UL>

<P><STRONG><a name="[10f]"></a>usart_init</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, lto-llvm-5b4722.o(.text.usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[13c]"></a>usart_transmitter_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.usart_transmitter_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_transmitter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[13d]"></a>usart_receiver_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.usart_receiver_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_receiver_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[13e]"></a>usart_parity_selection_config</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.usart_parity_selection_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_parity_selection_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[13f]"></a>usart_hardware_flow_control_set</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.usart_hardware_flow_control_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_hardware_flow_control_set
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[140]"></a>usart_interrupt_enable</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[141]"></a>usart_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.usart_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart5_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_uart4_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[a1]"></a>flash_unlock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_command_handle
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_init
</UL>

<P><STRONG><a name="[a2]"></a>flash_sector_erase</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.flash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_sector_erase &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_command_handle
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_init
</UL>

<P><STRONG><a name="[cf]"></a>flash_word_program</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.flash_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = flash_word_program &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_command_handle
</UL>

<P><STRONG><a name="[a4]"></a>flash_lock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.flash_lock))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_command_handle
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_init
</UL>

<P><STRONG><a name="[d7]"></a>nvic_system_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.nvic_system_reset))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_command_handle
</UL>

<P><STRONG><a name="[c2]"></a>gpio_bits_reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.gpio_bits_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hot_control
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_id
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_gpio_config
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_off
</UL>

<P><STRONG><a name="[131]"></a>tmr_cnt_dir_set</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_cnt_dir_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_cnt_dir_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[132]"></a>tmr_clock_source_div_set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_clock_source_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_clock_source_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[133]"></a>tmr_period_buffer_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_period_buffer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_period_buffer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[134]"></a>tmr_base_init</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.tmr_base_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmr_base_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[135]"></a>tmr_sub_sync_mode_set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_sub_sync_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_sub_sync_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[136]"></a>tmr_primary_mode_select</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_primary_mode_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_primary_mode_select
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[137]"></a>tmr_one_cycle_mode_enable</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_one_cycle_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_one_cycle_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[138]"></a>tmr_output_channel_config</STRONG> (Thumb, 496 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.tmr_output_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tmr_output_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[139]"></a>tmr_output_channel_buffer_enable</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_output_channel_buffer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_output_channel_buffer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[13a]"></a>tmr_output_channel_immediately_set</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.tmr_output_channel_immediately_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_output_channel_immediately_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr9_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr2_init
</UL>

<P><STRONG><a name="[13b]"></a>tmr_input_channel_init</STRONG> (Thumb, 556 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.tmr_input_channel_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmr_input_channel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[111]"></a>crm_adc_clock_div_set</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.crm_adc_clock_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_adc_clock_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[112]"></a>adc_tempersensor_vintrv_enable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.adc_tempersensor_vintrv_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_tempersensor_vintrv_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[113]"></a>adc_base_default_para_init</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.adc_base_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_base_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[114]"></a>adc_base_config</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_base_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_base_config
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[d1]"></a>adc_ordinary_channel_set</STRONG> (Thumb, 360 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.adc_ordinary_channel_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_ordinary_channel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[115]"></a>adc_ordinary_conversion_trigger_set</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_ordinary_conversion_trigger_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_ordinary_conversion_trigger_set
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[116]"></a>adc_ordinary_part_mode_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_ordinary_part_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_ordinary_part_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[117]"></a>adc_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[118]"></a>adc_calibration_init</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.adc_calibration_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_calibration_init
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[119]"></a>adc_calibration_init_status_get</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_calibration_init_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_calibration_init_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[11a]"></a>adc_calibration_start</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.adc_calibration_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_calibration_start
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[11b]"></a>adc_calibration_status_get</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_calibration_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_calibration_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[d2]"></a>adc_ordinary_software_trigger_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_ordinary_software_trigger_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_ordinary_software_trigger_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_adc1_init
</UL>

<P><STRONG><a name="[10b]"></a>spi_default_para_init</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.spi_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_spi1_init
</UL>

<P><STRONG><a name="[10c]"></a>spi_init</STRONG> (Thumb, 446 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_spi1_init
</UL>

<P><STRONG><a name="[10d]"></a>spi_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.spi_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_spi1_init
</UL>

<P><STRONG><a name="[11e]"></a>dma_reset</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.dma_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_dma1_channel1_init
</UL>

<P><STRONG><a name="[11f]"></a>dma_default_para_init</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.dma_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_dma1_channel1_init
</UL>

<P><STRONG><a name="[120]"></a>dma_init</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_dma1_channel1_init
</UL>

<P><STRONG><a name="[121]"></a>gpio_exint_line_config</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.gpio_exint_line_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_exint_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_exint_config
</UL>

<P><STRONG><a name="[122]"></a>exint_default_para_init</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.exint_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = exint_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_exint_config
</UL>

<P><STRONG><a name="[123]"></a>exint_init</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.exint_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = exint_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_exint_config
</UL>

<P><STRONG><a name="[ce]"></a>flash_operation_status_get</STRONG> (Thumb, 104 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.flash_operation_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>

<P><STRONG><a name="[cd]"></a>flash_operation_wait_for</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.flash_operation_wait_for))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
</UL>

<P><STRONG><a name="[a3]"></a>flash_halfword_program</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.flash_halfword_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_halfword_program &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[c5]"></a>gpio_input_data_bit_read</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.gpio_input_data_bit_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_handle_position
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_touch
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_ch
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_down
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_up
</UL>

<P><STRONG><a name="[c3]"></a>gpio_bits_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.gpio_bits_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hot_control
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_id
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_on
</UL>

<P><STRONG><a name="[ff]"></a>__NVIC_SystemReset</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_system_reset
</UL>

<P><STRONG><a name="[f9]"></a>__NVIC_GetPriorityGrouping.98</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.__NVIC_GetPriorityGrouping.98))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[fa]"></a>NVIC_EncodePriority.99</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.NVIC_EncodePriority.99))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_EncodePriority.99
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[fb]"></a>__NVIC_SetPriority.100</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.__NVIC_SetPriority.100))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority.100
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[fc]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[fe]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.__NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
</UL>

<P><STRONG><a name="[c1]"></a>usart_data_transmit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.usart_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>

<P><STRONG><a name="[bd]"></a>usart_flag_get</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.usart_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[bf]"></a>usart_flag_clear</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.usart_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[d4]"></a>adc_ordinary_conversion_data_get</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.adc_ordinary_conversion_data_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_ordinary_conversion_data_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
</UL>

<P><STRONG><a name="[d3]"></a>adc_flag_get</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.adc_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
</UL>

<P><STRONG><a name="[104]"></a>spi_i2s_dma_transmitter_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.spi_i2s_dma_transmitter_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_i2s_dma_transmitter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[105]"></a>spi_i2s_dma_receiver_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.spi_i2s_dma_receiver_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_i2s_dma_receiver_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[106]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.spi_i2s_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[108]"></a>spi_i2s_data_receive</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.spi_i2s_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[107]"></a>spi_i2s_flag_get</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.spi_i2s_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_i2s_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[4e]"></a>tmt_run</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.tmt_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tmt_run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[4f]"></a>tmt_update_tick</STRONG> (Thumb, 106 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.tmt_update_tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tmt_update_tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[50]"></a>tmt_create</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.tmt_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmt_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[51]"></a>tmt_delete</STRONG> (Thumb, 298 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.tmt_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmt_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[52]"></a>tmt_time_ctrl</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.tmt_time_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmt_time_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[53]"></a>tmt_run_ctrl</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.tmt_run_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmt_run_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[ab]"></a>abs_limit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.abs_limit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = abs_limit
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[59]"></a>beep_on</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.beep_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = beep_on &rArr; gpio_bits_set
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>beep_off</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.beep_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = beep_off &rArr; gpio_bits_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.data)
</UL>
<P><STRONG><a name="[9f]"></a>data_check_len</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.data_check_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = data_check_len &rArr; flash_wred_halfword
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wred_halfword
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[a0]"></a>flash_wred_halfword</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.flash_wred_halfword))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_wred_halfword
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_check_len
</UL>

<P><STRONG><a name="[a7]"></a>KeyProc</STRONG> (Thumb, 2498 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.KeyProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = KeyProc &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_check
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_touch
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_ch
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_down
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_key_up
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_handle
</UL>

<P><STRONG><a name="[56]"></a>get_key_up</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.get_key_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_key_up &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_handle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>get_key_down</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.get_key_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_key_down &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_handle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>get_key_ch</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.get_key_ch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_key_ch &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_handle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>get_key_touch</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.get_key_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_key_touch &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_handle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.data)
</UL>
<P><STRONG><a name="[a8]"></a>key_event_check</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.key_event_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = key_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProc
</UL>

<P><STRONG><a name="[da]"></a>key_event_handle</STRONG> (Thumb, 1886 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.key_event_handle))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_handle
</UL>

<P><STRONG><a name="[f7]"></a>moveAverageFilter</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.moveAverageFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = moveAverageFilter &rArr; get_adcval &rArr; adc_ordinary_channel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_get_filter_move_average
</UL>

<P><STRONG><a name="[86]"></a>check_handle_position</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.check_handle_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = check_handle_position &rArr; gpio_input_data_bit_read
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direct_handle_switch
</UL>

<P><STRONG><a name="[af]"></a>usart_sendData</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.usart_sendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usart_sendData &rArr; queue_read &rArr; queue_isEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_write
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Code_Heartbeat_Packet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Direct_Curve_Heartbeat_Packet
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Switch
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToLCD
</UL>

<P><STRONG><a name="[44]"></a>WriteDataToLCD</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.WriteDataToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WriteDataToLCD &rArr; usart_sendData &rArr; queue_read &rArr; queue_isEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.DwinInitialization)
</UL>
<P><STRONG><a name="[45]"></a>RecvDataFromLCD</STRONG> (Thumb, 6628 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.RecvDataFromLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = RecvDataFromLCD &rArr; usart_receiveData &rArr; queue_read &rArr; queue_isEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiveData
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-5b4722.o(.text.DwinInitialization)
</UL>
<P><STRONG><a name="[b5]"></a>usart_receiveData</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.usart_receiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usart_receiveData &rArr; queue_read &rArr; queue_isEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[7a]"></a>queue_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UsartInit
</UL>

<P><STRONG><a name="[be]"></a>queue_write</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.queue_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = queue_write &rArr; queue_isFull
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_isFull
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>

<P><STRONG><a name="[101]"></a>queue_isFull</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.queue_isFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = queue_isFull
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_write
</UL>

<P><STRONG><a name="[c0]"></a>queue_read</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lto-llvm-5b4722.o(.text.queue_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = queue_read &rArr; queue_isEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_isEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiveData
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>

<P><STRONG><a name="[100]"></a>queue_isEmpty</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, lto-llvm-5b4722.o(.text.queue_isEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = queue_isEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
</UL>

<P><STRONG><a name="[103]"></a>spi_byte_write</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.spi_byte_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_byte_write &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_dma_receiver_enable
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_dma_transmitter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_id
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_read
</UL>

<P><STRONG><a name="[102]"></a>spi_byte_read</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.spi_byte_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = spi_byte_read &rArr; spi_byte_write &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_id
</UL>

<P><STRONG><a name="[d0]"></a>stdout_putchar</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.stdout_putchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = stdout_putchar &rArr; EventRecordData &rArr; EventRecordItem &rArr; LockRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[8c]"></a>EventRecordData</STRONG> (Thumb, 400 bytes, Stack size 56 bytes, lto-llvm-5b4722.o(.text.EventRecordData))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = EventRecordData &rArr; EventRecordItem &rArr; LockRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventCheckFilter
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_putchar
</UL>

<P><STRONG><a name="[9a]"></a>EventRecorderTimerSetup</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.EventRecorderTimerSetup))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[9b]"></a>EventRecorderTimerGetFreq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.EventRecorderTimerGetFreq))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[8a]"></a>EventRecorderTimerGetCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-5b4722.o(.text.EventRecorderTimerGetCount))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
</UL>

<P><STRONG><a name="[98]"></a>crc16_ccitt</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.crc16_ccitt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[9c]"></a>EventRecorderEnable</STRONG> (Thumb, 144 bytes, Stack size 28 bytes, lto-llvm-5b4722.o(.text.EventRecorderEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EventRecorderEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[89]"></a>EventGetTS</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, lto-llvm-5b4722.o(.text.EventGetTS))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EventGetTS &rArr; atomic_cmp_xch_32
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atomic_cmp_xch_32
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderTimerGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderStart
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>

<P><STRONG><a name="[8e]"></a>EventRecordItem</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, lto-llvm-5b4722.o(.text.EventRecordItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = EventRecordItem &rArr; LockRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncrementRecordsDumped
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncrementRecordsWritten
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockRecord
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockRecord
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecordIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderStart
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>

<P><STRONG><a name="[9d]"></a>EventRecorderStart</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lto-llvm-5b4722.o(.text.EventRecorderStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = EventRecorderStart &rArr; EventRecordItem &rArr; LockRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[8b]"></a>atomic_cmp_xch_32</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, lto-llvm-5b4722.o(.text.atomic_cmp_xch_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = atomic_cmp_xch_32
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
</UL>

<P><STRONG><a name="[91]"></a>GetRecordIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.GetRecordIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetRecordIndex &rArr; atomic_inc_32
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atomic_inc_32
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[92]"></a>LockRecord</STRONG> (Thumb, 142 bytes, Stack size 28 bytes, lto-llvm-5b4722.o(.text.LockRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LockRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[93]"></a>UnlockRecord</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, lto-llvm-5b4722.o(.text.UnlockRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UnlockRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[94]"></a>IncrementRecordsWritten</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.IncrementRecordsWritten))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IncrementRecordsWritten &rArr; atomic_inc_32
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atomic_inc_32
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[95]"></a>IncrementRecordsDumped</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.IncrementRecordsDumped))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IncrementRecordsDumped &rArr; atomic_inc_32
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atomic_inc_32
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[a6]"></a>atomic_inc_32</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, lto-llvm-5b4722.o(.text.atomic_inc_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = atomic_inc_32
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncrementRecordsDumped
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncrementRecordsWritten
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecordIndex
</UL>

<P><STRONG><a name="[8d]"></a>EventCheckFilter</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.EventCheckFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EventCheckFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>

<P><STRONG><a name="[90]"></a>GetContext</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.GetContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetContext &rArr; atomic_inc_8
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atomic_inc_8
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>

<P><STRONG><a name="[a5]"></a>atomic_inc_8</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lto-llvm-5b4722.o(.text.atomic_inc_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = atomic_inc_8
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
