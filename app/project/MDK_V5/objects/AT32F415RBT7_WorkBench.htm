<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\objects\AT32F415RBT7_WorkBench.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\objects\AT32F415RBT7_WorkBench.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Mon Jun  9 18:25:14 2025
<BR><P>
<H3>Maximum Stack Usage =        420 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
flash_task &rArr; FlashProc &rArr; data_check_len &rArr; flash_wred_halfword
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from lto-llvm-2a85c4.o(.text.BusFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[20]">CAN1_SE_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3e]">CMP1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3f]">CMP2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[f]">CRM_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[39]">DMA2_Channel1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3a]">DMA2_Channel2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[40]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from lto-llvm-2a85c4.o(.text.DebugMon_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[33]">ERTCAlarm_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[d]">ERTC_WKUP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[10]">EXINT0_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[32]">EXINT15_10_IRQHandler</a> from lto-llvm-2a85c4.o(.text.EXINT15_10_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[11]">EXINT1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[12]">EXINT2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[13]">EXINT3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[14]">EXINT4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[21]">EXINT9_5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[55]">EventRecorderEnable</a> from lto-llvm-2a85c4.o(.text.EventRecorderEnable) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-2a85c4.o(.text.HardFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2a]">I2C1_ERR_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[29]">I2C1_EVT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2c]">I2C2_ERR_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2b]">I2C2_EVT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from lto-llvm-2a85c4.o(.text.MemManage_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-2a85c4.o(.text.NMI_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3d]">OTGFS1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[34]">OTGFS1_WKUP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from lto-llvm-2a85c4.o(.text.PendSV_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[56]">RecvDataFromLCD</a> from lto-llvm-2a85c4.o(.text.RecvDataFromLCD) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[35]">SDIO1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from lto-llvm-2a85c4.o(.text.SVC_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from lto-llvm-2a85c4.o(.text.SysTick_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[42]">SystemInit</a> from lto-llvm-2a85c4.o(.text.SystemInit) referenced from startup_at32f415.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[25]">TMR1_CH_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[23]">TMR1_OVF_TMR10_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[26]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[27]">TMR3_GLOBAL_IRQHandler</a> from lto-llvm-2a85c4.o(.text.TMR3_GLOBAL_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[28]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[36]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[37]">UART4_IRQHandler</a> from lto-llvm-2a85c4.o(.text.UART4_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[38]">UART5_IRQHandler</a> from lto-llvm-2a85c4.o(.text.UART5_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from lto-llvm-2a85c4.o(.text.USART1_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from lto-llvm-2a85c4.o(.text.USART2_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from lto-llvm-2a85c4.o(.text.USART3_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from lto-llvm-2a85c4.o(.text.UsageFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[57]">WriteDataToLCD</a> from lto-llvm-2a85c4.o(.text.WriteDataToLCD) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[43]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f415.o(.text)
 <LI><a href="#[51]">adc_task</a> from lto-llvm-2a85c4.o(.text.adc_task) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[52]">beep_task</a> from lto-llvm-2a85c4.o(.text.beep_task) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[44]">flash_halfword_program</a> from lto-llvm-2a85c4.o(.text.flash_halfword_program) referenced from lto-llvm-2a85c4.o(.text.FlashProc)
 <LI><a href="#[54]">flash_task</a> from lto-llvm-2a85c4.o(.text.flash_task) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[45]">flash_wred_halfword</a> from lto-llvm-2a85c4.o(.text.flash_wred_halfword) referenced from lto-llvm-2a85c4.o(.text.FlashProc)
 <LI><a href="#[59]">get_key_ch</a> from lto-llvm-2a85c4.o(.text.get_key_ch) referenced from lto-llvm-2a85c4.o(.data)
 <LI><a href="#[5b]">get_key_down</a> from lto-llvm-2a85c4.o(.text.get_key_down) referenced from lto-llvm-2a85c4.o(.data)
 <LI><a href="#[5c]">get_key_touch</a> from lto-llvm-2a85c4.o(.text.get_key_touch) referenced from lto-llvm-2a85c4.o(.data)
 <LI><a href="#[5a]">get_key_up</a> from lto-llvm-2a85c4.o(.text.get_key_up) referenced from lto-llvm-2a85c4.o(.data)
 <LI><a href="#[47]">gpio_init</a> from lto-llvm-2a85c4.o(.text.gpio_init) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[4f]">iap_task</a> from lto-llvm-2a85c4.o(.text.iap_task) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[46]">key_event_check</a> from lto-llvm-2a85c4.o(.text.key_event_check) referenced from lto-llvm-2a85c4.o(.text.key_task)
 <LI><a href="#[50]">key_task</a> from lto-llvm-2a85c4.o(.text.key_task) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[41]">main</a> from lto-llvm-2a85c4.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[58]">spi_byte_write</a> from lto-llvm-2a85c4.o(.text.spi_byte_write) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[4d]">tmt_create</a> from lto-llvm-2a85c4.o(.text.tmt_create) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[4c]">tmt_delete</a> from lto-llvm-2a85c4.o(.text.tmt_delete) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[49]">tmt_run</a> from lto-llvm-2a85c4.o(.text.tmt_run) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[4a]">tmt_run_ctrl</a> from lto-llvm-2a85c4.o(.text.tmt_run_ctrl) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[4b]">tmt_time_ctrl</a> from lto-llvm-2a85c4.o(.text.tmt_time_ctrl) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[4e]">tmt_update_tick</a> from lto-llvm-2a85c4.o(.text.tmt_update_tick) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[48]">usart_init</a> from lto-llvm-2a85c4.o(.text.usart_init) referenced from lto-llvm-2a85c4.o(.text.main)
 <LI><a href="#[53]">work_task</a> from lto-llvm-2a85c4.o(.text.work_task) referenced from lto-llvm-2a85c4.o(.text.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[43]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[68]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ad]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ae]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[af]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b0]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b1]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ERTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ERTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>OTGFS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTGFS1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_OVF_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b3]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b6]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[62]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[6f]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6e]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXINT15_10_IRQHandler</STRONG> (Thumb, 700 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.EXINT15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EXINT15_10_IRQHandler &rArr; puts &rArr; fputc &rArr; EventRecordData &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 764 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SystemInit</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.TMR3_GLOBAL_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.UART4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.UART5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lto-llvm-2a85c4.o(.text.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART2_IRQHandler &rArr; queue_write
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_write
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.USART3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>fputc</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = fputc &rArr; EventRecordData &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>

<P><STRONG><a name="[41]"></a>main</STRONG> (Thumb, 3636 bytes, Stack size 32 bytes, lto-llvm-2a85c4.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = main &rArr; puts &rArr; fputc &rArr; EventRecordData &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_read
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_channel_set
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[bb]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[bc]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bd]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[79]"></a>puts</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, puts.o(i.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = puts &rArr; fputc &rArr; EventRecordData &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a1]"></a>crm_clocks_freq_get</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, lto-llvm-2a85c4.o(.text.crm_clocks_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[a2]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>spi_init</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>adc_ordinary_channel_set</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.adc_ordinary_channel_set))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
</UL>

<P><STRONG><a name="[a5]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>tmr_output_channel_config</STRONG> (Thumb, 196 bytes, Stack size 20 bytes, lto-llvm-2a85c4.o(.text.tmr_output_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tmr_output_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>EventGetTS</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.EventGetTS))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EventGetTS
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>

<P><STRONG><a name="[81]"></a>EventRecordItem</STRONG> (Thumb, 240 bytes, Stack size 44 bytes, lto-llvm-2a85c4.o(.text.EventRecordItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = EventRecordItem
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
</UL>

<P><STRONG><a name="[84]"></a>flash_sector_erase</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.flash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_sector_erase &rArr; flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_task
</UL>

<P><STRONG><a name="[a9]"></a>spi_byte_read</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.spi_byte_read))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>queue_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.queue_init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>gpio_init</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, lto-llvm-2a85c4.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[48]"></a>usart_init</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, lto-llvm-2a85c4.o(.text.usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usart_init &rArr; crm_clocks_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[49]"></a>tmt_run</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.tmt_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tmt_run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[4a]"></a>tmt_run_ctrl</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.tmt_run_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmt_run_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[4b]"></a>tmt_time_ctrl</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.tmt_time_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmt_time_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[4c]"></a>tmt_delete</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.tmt_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tmt_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[4d]"></a>tmt_create</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.tmt_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmt_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[4e]"></a>tmt_update_tick</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.tmt_update_tick))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[4f]"></a>iap_task</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.iap_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = iap_task &rArr; flash_word_program &rArr; flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_system_reset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[50]"></a>key_task</STRONG> (Thumb, 1384 bytes, Stack size 24 bytes, lto-llvm-2a85c4.o(.text.key_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = key_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[51]"></a>adc_task</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.adc_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = adc_task &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[52]"></a>beep_task</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.beep_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = beep_task
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_on
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[53]"></a>work_task</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.work_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = work_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[54]"></a>flash_task</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.flash_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = flash_task &rArr; FlashProc &rArr; data_check_len &rArr; flash_wred_halfword
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[55]"></a>EventRecorderEnable</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-2a85c4.o(.text.EventRecorderEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EventRecorderEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[56]"></a>RecvDataFromLCD</STRONG> (Thumb, 2916 bytes, Stack size 24 bytes, lto-llvm-2a85c4.o(.text.RecvDataFromLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RecvDataFromLCD &rArr; usart_sendData &rArr; queue_write
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[57]"></a>WriteDataToLCD</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.WriteDataToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteDataToLCD &rArr; usart_sendData &rArr; queue_write
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[58]"></a>spi_byte_write</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.spi_byte_write))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.main)
</UL>
<P><STRONG><a name="[9d]"></a>flash_word_program</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.flash_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_word_program &rArr; flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_task
</UL>

<P><STRONG><a name="[a0]"></a>nvic_system_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.nvic_system_reset))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_task
</UL>

<P><STRONG><a name="[46]"></a>key_event_check</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.key_event_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = key_event_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.key_task)
</UL>
<P><STRONG><a name="[86]"></a>get_adcval</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.get_adcval))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_adcval
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_channel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[97]"></a>beep_off</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.beep_off))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_task
</UL>

<P><STRONG><a name="[98]"></a>beep_on</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.beep_on))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_task
</UL>

<P><STRONG><a name="[99]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_task
</UL>

<P><STRONG><a name="[82]"></a>FlashProc</STRONG> (Thumb, 10844 bytes, Stack size 392 bytes, lto-llvm-2a85c4.o(.text.FlashProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = FlashProc &rArr; data_check_len &rArr; flash_wred_halfword
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wred_halfword
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_check_len
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[93]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[94]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[95]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[76]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_13 &rArr; get_adcval
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[78]"></a>OUTLINED_FUNCTION_14</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_14))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[7a]"></a>PID_Position_Calc</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, lto-llvm-2a85c4.o(.text.PID_Position_Calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PID_Position_Calc &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[9c]"></a>flash_operation_status_get</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.flash_operation_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>

<P><STRONG><a name="[9a]"></a>flash_operation_wait_for</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.flash_operation_wait_for))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>

<P><STRONG><a name="[9b]"></a>OUTLINED_FUNCTION_17</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_17))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
</UL>

<P><STRONG><a name="[44]"></a>flash_halfword_program</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-2a85c4.o(.text.flash_halfword_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_halfword_program &rArr; flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.FlashProc)
</UL>
<P><STRONG><a name="[ab]"></a>__NVIC_SystemReset</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_system_reset
</UL>

<P><STRONG><a name="[85]"></a>data_check_len</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lto-llvm-2a85c4.o(.text.data_check_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = data_check_len &rArr; flash_wred_halfword
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wred_halfword
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[45]"></a>flash_wred_halfword</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-2a85c4.o(.text.flash_wred_halfword))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_wred_halfword
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_check_len
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.text.FlashProc)
</UL>
<P><STRONG><a name="[83]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[5a]"></a>get_key_up</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.get_key_up))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>get_key_down</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.get_key_down))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>get_key_ch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.get_key_ch))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>get_key_touch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.get_key_touch))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-2a85c4.o(.data)
</UL>
<P><STRONG><a name="[8f]"></a>usart_sendData</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, lto-llvm-2a85c4.o(.text.usart_sendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usart_sendData &rArr; queue_write
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_write
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataToLCD
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[8b]"></a>queue_read</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.queue_read))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[8c]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[8d]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[8e]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[90]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[91]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[92]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-2a85c4.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromLCD
</UL>

<P><STRONG><a name="[96]"></a>queue_write</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lto-llvm-2a85c4.o(.text.queue_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = queue_write
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_sendData
</UL>

<P><STRONG><a name="[7e]"></a>EventRecordData</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lto-llvm-2a85c4.o(.text.EventRecordData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = EventRecordData &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
